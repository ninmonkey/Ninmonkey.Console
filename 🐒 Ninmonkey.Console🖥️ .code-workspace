{
    "folders": [
        {
            "path": ".",
            "name": "Ninmonkey.Console"
        }
    ],
    "settings": {
        /*
        schema for Powershell Types.ps1xml and Format.ps1xml
    */
        "powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1",
        "xml.fileAssociations": [
            {
                "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Format.xsd",
                "pattern": "**/*.Format.ps1xml"
            },
            {
                "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Types.xsd",
                "pattern": "**/*.Types.ps1xml"
            }
        ],
        // /*
        //     self color test
        // */
        // "workbench.colorCustomizations": {
        //     "window.activeBorder": "#eba714"
        // },
        /*
            start
        */
        // "powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1",
        "terminal.integrated.drawBoldTextInBrightColors": true,
        "editor.fontSize": 16,
        "markdown.preview.fontSize": 12,
        // "screencastMode.fontSize": 56,
        // "window.zoomLevel": 0,
        "[powershell]": {
            // "editor.formatOnSave": true,
            // "editor.formatOnPaste": true,
            // "editor.autoIndent": "advanced",
            // "files.encoding": "utf8bom",
            // "files.autoGuessEncoding": true
        },
        "powershell.codeFormatting.autoCorrectAliases": true,
        "powershell.codeFormatting.useCorrectCasing": true,
        "files.defaultLanguage": "${activeEditorLanguage}",
        // to fix current formatting bug
        "powershell.codeFormatting.whitespaceBetweenParameters": false,
        "files.exclude": {
            "*.zip": true,
            "*.lnk": true,
            "*.exe": true,
            "LICENSE": true,
            "C:/Users/cppmo_000/Documents/2020/powershell/MyModules_Github/Ninmonkey.Console-dotsource/*": true, // warning: doesn't seem to affect <ctrl+p>
        },
        "files.associations": {
            "*.ps1xml": "xml"
        },
        "terminal.integrated.copyOnSelection": true,
        "powershell.codeFormatting.pipelineIndentationStyle": "None",
        "powershell.codeFormatting.addWhitespaceAroundPipe": true,
        "markdownlint.config": {
            "MD028": false,
            "MD025": {
                "front_matter_title": ""
            }
        },
        "workbench.colorCustomizations": {
            "errorLens.warningMessageBackground": "#fff00005",
            "errorLens.warningBackground": "#ff942f10",
            "errorLens.errorForeground": "#f77777",
            "errorLens.errorMessageBackground": "#e4545405",
            "errorLens.errorBackground": "#e454540a",
            "errorLens.warningForeground": "#fa973a70",
            "errorLens.infoForeground": "#ea00ff",
            "minimap.findMatchHighlight": "#1ef029",
            "minimap.warningHighlight": "#ee6f8a6b",
            "minimap.foregroundOpacity": "#ff000081",
            "minimap.selectionHighlight": "#264f78",
            "minimap.selectionOccurrenceHighlight": "#feef2e",
            "minimap.unicodeHighlight": "#d18616",
            "minimapGutter.addedBackground": "#587c0c",
            "minimapGutter.deletedBackground": "#94151b",
            "minimapGutter.modifiedBackground": "#0c7d9d",
            "minimapSlider.activeBackground": "#bfbfbf33",
            "minimapSlider.background": "#79797933",
            "minimapSlider.hoverBackground": "#64646459",
            "editorBracketMatch.border": "#888888",
            "editorLineNumber.foreground": "#4e4e4ea1",
            "editorLineNumber.activeForeground": "#929292",
            "list.hoverBackground": "#ff00ff18",
            "peekView.border": "#ff00ff",
            "tab.lastPinnedBorder": "#2472c8",
            "terminal.ansiBlack": "#000000",
            "terminal.ansiBlue": "#2472c8",
            "terminal.ansiBrightBlack": "#666666",
            "terminal.ansiBrightBlue": "#569cd6",
            "terminal.ansiBrightCyan": "#9cdcfe",
            "terminal.ansiBrightGreen": "#b5cea8",
            "terminal.ansiBrightMagenta": "#d38bcd",
            "terminal.ansiBrightRed": "#f14c4c",
            "terminal.ansiBrightWhite": "#e5e5e5",
            "terminal.ansiBrightYellow": "#ecec6a",
            "terminal.ansiCyan": "#11a8cd",
            "terminal.ansiGreen": "#6a9955",
            "terminal.ansiMagenta": "#C586C0",
            "terminal.ansiRed": "#cd3131",
            "terminal.ansiWhite": "#e5e5e5",
            "terminal.ansiYellow": "#CE9178",
            "terminal.background": "#1E1E1E",
            "terminal.foreground": "#D4D4D4",
            "editor.lineHighlightBackground": "#1073cf2d",
            "editor.lineHighlightBorder": "#9fced11f",
            "editorBracketHighlight.foreground1": "#ffd780",
            "editorBracketHighlight.foreground2": "#da70d686",
            "editorBracketHighlight.foreground3": "#179f80",
            "editorBracketHighlight.foreground4": "#ffffff80",
            "testing.message.error.decorationForeground": "#ff646440",
            "testing.message.error.lineBackground": "#e4545405",
            "testing.peekBorder": "#F14C4C",
            "testing.peekHeaderBackground": "#F14C4C1a",
            "testing.iconFailed": "#cd3131",
            "testing.iconPassed": "#6a9955",
            "testing.iconQueued": "#CCA700",
            "testing.iconSkipped": "#ff00ff",
            "testing.iconErrored": "#bb600c",
            "testing.iconUnset": "#848484"
        }
    },
    "launch": {
        // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
        "version": "0.2.0",
        "configurations": [
            {
                "name": "üêí Test Format.ps1xml",
                "type": "PowerShell",
                "request": "launch",
                "script": "${workspaceFolder}/test/test_Format.ps1xml.ps1",
                "cwd": "${workspaceFolder}"
            },
            {
                "name": "üêú Test basic Import",
                "type": "PowerShell",
                "request": "launch",
                "script": "${workspaceFolder}/test/test_basic_import.ps1",
                "cwd": "${workspaceFolder}"
            },
            {
                "name": "<temprun-write-color>.ps1",
                "type": "PowerShell",
                "request": "launch",
                "script": "${workspaceFolder}/test/private/run_temp_color_test.ps1",
                "cwd": "${file}",
                "presentation": {
                    "hidden": false,
                    "group": "TempScript",
                    "order": 3
                },
            },
            {
                "name": "'Get-ChildItem ",
                "type": "PowerShell",
                "request": "launch",
                "script": "write-host hi",
                "cwd": "${workspaceFolder}"
            },
            {
                "name": "<temprun>.ps1",
                "type": "PowerShell",
                "request": "launch",
                "script": "${workspaceFolder}/test/private/run_temp_test.ps1",
                // "script": "${Ninmonkey.Console:workspaceFolder}/test/private/run_temp_test.ps1",
                "cwd": "${file}",
                "presentation": {
                    "hidden": false,
                    "group": "TempScript",
                    "order": 3
                },
            },
            {
                "name": "üêí visual test.ps1",
                "type": "PowerShell",
                "presentation": {
                    "hidden": false,
                    "group": "TempScript",
                    "order": 1
                },
                "request": "launch",
                "script": "${workspaceFolder}/test/public/Write-ConsoleLabel.visual_tests.ps1",
                "cwd": "${file}"
            },
            {
                "name": "üêí cur.ps1 ‚Äî ",
                "type": "PowerShell",
                "request": "launch",
                "presentation": {
                    "hidden": false,
                    "group": "TempScript",
                    "order": 2
                },
                "script": "${file}",
                "cwd": "${file}"
            },
            {
                // slower, and verbose
                "name": "üêõ : [Details] ‚Äî ",
                "type": "PowerShell",
                "request": "launch",
                "script": "Invoke-Pester",
                "args": [
                    "-Output",
                    "Detailed"
                ],
                "cwd": "${workspaceFolder}",
                "presentation": {
                    "hidden": false,
                    "group": "Pester",
                    "order": 1
                },
            },
            {
                "name": "üêõ : | default | ‚Äî ", // [nin.PowerShell]",
                "type": "PowerShell",
                "request": "launch",
                "script": "Invoke-Pester",
                // "args": [],
                "cwd": "${workspaceFolder}",
                "presentation": {
                    "hidden": false,
                    "group": "Pester",
                    // "order": 1
                },
            },
            {
                "name": "üêõ | üèÉ | #currentFilter |",
                "type": "PowerShell",
                "request": "launch",
                "script": "Invoke-Pester",
                "cwd": "${workspaceFolder}",
                "args": [
                    // "-Output",
                    // "Detailed",
                    "-TagFilter",
                    "ConvertTo"
                    // "wip"
                    // "wip-hash"
                ],
                "presentation": {
                    "hidden": false,
                    "group": "Pester",
                    // "order": 1
                },
            },
            {
                "name": "üêõ | üèÉ | #WIP |",
                "type": "PowerShell",
                "request": "launch",
                "script": "Invoke-Pester",
                "cwd": "${workspaceFolder}",
                "args": [
                    "-Output",
                    "Detailed",
                    "-TagFilter",
                    "ConvertTo"
                    // "wip"
                    // "wip-hash"
                ],
                "presentation": {
                    "hidden": false,
                    "group": "Pester",
                    // "order": 1
                },
            },
            /* pester example snippets
        1.
            Invoke-Pester -Output Detailed
        1.
            -Path './Ninmonkey.Console/test/*'",
        1.
            "cwd": "${workspaceFolder}/Ninmonkey.Console",

        */
        ]
    }
}